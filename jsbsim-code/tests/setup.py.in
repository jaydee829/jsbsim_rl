import os, sys

from distutils.core import setup
from distutils.extension import Extension
from distutils.command.build_ext import build_ext
from distutils.command.install_lib import install_lib


class SilentBuild(build_ext):
    def __init__(self, dist):
        build_ext.__init__(self, dist)
        self.oldstdout = os.dup(sys.stdout.fileno())
        self.devnull = open('devnull.txt', 'w')
        os.dup2(self.devnull.fileno(), sys.stdout.fileno())

    def __del__(self):
        os.dup2(self.oldstdout, sys.stdout.fileno())
        self.devnull.close()

# Installation process for the JSBSim Python module
setup(
    name="${PROJECT_NAME}",
    version="${PROJECT_VERSION}",
    cmdclass={'build_ext': SilentBuild},
    ext_modules=[Extension('jsbsim', ['${JSBSIM_CXX}'],
                           libraries=['JSBSim'],
                           include_dirs=[os.path.join('${CMAKE_SOURCE_DIR}',
                                                      'src'),
                                         os.path.join('${CMAKE_SOURCE_DIR}',
                                                      'tests')],
                           library_dirs=[os.path.join('${CMAKE_BINARY_DIR}',
                                                      'src')],
                           language='c++')])

# Build process for the fpectl module
setup(
    cmdclass={'build_ext': SilentBuild},
    ext_modules=[Extension('fpectl',
                           sources=[os.path.join('${CMAKE_SOURCE_DIR}',
                                                 'tests',
                                                 'fpectlmodule.cpp')],
                           language='c++')])
